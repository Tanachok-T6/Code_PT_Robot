// ความเร็วมอเตอร์ 0-100
void Examples() {
  // motorWrite(50, 50, 50, 50);      //สั่งมอเตอร์ หมุนเดินหน้า motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  // motorWrite(-50, -50, -50, -50);  //สั่งมอเตอร์ หมุนถอยหน้า motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  // motorWrite(-50, -50, 50, 50);    //สั่งมอเตอร์ หมุนซ้าย motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  // motorWrite(50, 50, -50, -50);    //สั่งมอเตอร์ หมุนขวา motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  // motorWrite(0, 0, 50, 50);        //สั่งมอเตอร์ เลี้ยวซ้าย motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  // motorWrite(50, 50, 0, 0);        //สั่งมอเตอร์ เลี้ยวขวา motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorWrite(1, 100);  //สั่งมอเตอร์ หมุนเดินหน้า motorWrite(Pin motor 1, ความเร็วมอเตอร์ 1) Pin motor ใช้ได้ตั้งแต่ง 1 ถึง 4
  motorWrite(2, 100);  //สั่งมอเตอร์ หมุนเดินหน้า motorWrite(Pin motor 2, ความเร็วมอเตอร์ 2) Pin motor ใช้ได้ตั้งแต่ง 1 ถึง 4
  motorWrite(3, 100);  //สั่งมอเตอร์ หมุนเดินหน้า motorWrite(Pin motor 3, ความเร็วมอเตอร์ 3) Pin motor ใช้ได้ตั้งแต่ง 1 ถึง 4
  motorWrite(4, 100);  //สั่งมอเตอร์ หมุนเดินหน้า motorWrite(Pin motor 4, ความเร็วมอเตอร์ 4) Pin motor ใช้ได้ตั้งแต่ง 1 ถึง 4
  motorStop();         //สั่งมอเตอร์หยุดทั้ง 4 ตัว
  delay(100);          //หน่วงเวลา 1000millisecond = 1 วินาที

  FF(100);       //เดินหน้าตรงเรื่อยๆ FF(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  FF(100, 200);  //เดินหน้าตรง นับระยะทาง FF(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที)

  FF(100, 200, 'L');  //เดินหน้าตรง นับระยะทาง FF(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  //           'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //           'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //           'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //           'r' = เทิร์นเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  FF(100, 200, 'r', 175);  //เดินหน้าตรง นับระยะทาง FF(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  //           'L' = หมุนเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  //           'R' = หมุนเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**
  //           'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  //           'r' = เทิร์นเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**

  FF(80, 1520, 'R');  //5 ช่อง go 4 block
  FF(80, 970, 'R');  //4 ช่อง go 3 block
  FF(80, 720, 'R');  //3 ช่อง go 2 block
  FF(60, 520, 'R');  //2 ช่อง go 1 block
  
  BB(100);       //เดินถอยหลังตรงเรื่อยๆ BB(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  BB(100, 200);  //เดินถอยหลังตรง นับระยะทาง BB(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที)

  BB(40, 510); // ถอยหลัง 1 ช่อง หลังจากเก็บกระบ

  BB(100, 200, 'L');  //เดินถอยหลังตรง นับระยะทาง BB(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  //           'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //           'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //           'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //           'r' = เทิร์นเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  BB(100, 200, 'r', 175);  //เดินถอยหลังตรง นับระยะทาง BB(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  //           'L' = หมุนเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  //           'R' = หมุนเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**
  //           'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  //           'r' = เทิร์นเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**

  SetFront(25);       //เช็ตหน้าตรง เจอเส้นดำ จะหยุด SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  SetFront(25, 200);  //เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที)

  SetFront(25, 200, 'R');  //เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ พร้อมเลี้ยว SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว)
  //                'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //                'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  SetFront(25, 200, 'L', 130);  //เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ พร้อมเลี้ยว SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  //                'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //                'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**

  SetBack(25);       //เช็ตหลังตรง เจอเส้นดำ จะหยุด SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  SetBack(25, 200);  //เช็ตหลังตรง เมื่อเจอเส้นดำ จะถอยเดินจากเส้นดำ SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาเดินออกจากเส้นดำ 1000=1วินาที)

  SetBack(25, 200, 'L');  //เช็ตหลังตรง เมื่อเจอเส้นดำ จะถอยเดินจากเส้นดำ พร้อมเลี้ยว SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาเดินออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว)
  //               'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //               'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  SetBack(25, 200, 'R', 130);  //เช็ตหลังตรง เมื่อเจอเส้นดำ จะถอยเดินจากเส้นดำ พร้อมเลี้ยว SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาเดินออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  //               'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  //               'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**

  LL(130);  //หมุนซ้าย LL(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  RR(130);  //หมุนขวา RR(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)

  TL(175);  //เทิร์นซ้าย TL(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  TR(175);  //เทิร์นขวา TR(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)

  TL_B(175);  //ถอยหลัง เทิร์นซ้าย TL_B(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  TR_B(175);  //ถอยหลัง เทิร์นขวา TR_B(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)

  spinDegree(-90);  //หมุนซ้าย spinDegree(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  spinDegree(90);   //หมุนขวา spinDegree(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)

  turnDegreeFront(-90);  //เทิร์นซ้าย turnDegreeFront(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  turnDegreeFront(90);   //เทิร์นขวา turnDegreeFront(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)

  turnDegreeBack(-90);  //ถอยหลัง เทิร์นซ้าย turnDegreeBack(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  turnDegreeBack(90);   //ถอยหลัง เทิร์นขวา turnDegreeBack(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)

  ShowValue_Sensor();   //แสดงกราฟค่าของ Sensor ทั้งหมด 8 ตัว
  ShowDistanceSensor(); // โชว์ค่าเซ็นเซอร์วัดระยะทางผ่านทาง Serial Monitor
  STOP();               //สั่งหยุด กด SW1 or SW2 เพื่อทำงานต่อ

  pickCan(5, NO_SWITCH_LR);     // หยิบกระป๋อง pickCan(ความสูง หน่วยเป็นเซ็นติเมตร, หยิบและสลับกระป๋อง)
  //         NO_SWITCH_LR = หยิบกระป๋องแบบไม่สลับกระป๋อง
  //         SWITCH_LR = หยิบกระป๋องแบบสลับกระป๋อง
  placeCan1(10, 3, 'l', 'c');      // วาง 1 กระป๋อง placeCan(ความสูง หน่วยเป็นเซ็นติเมตร, ระยะจอด, เลือกมือจับ, ตำแหน่งวาง)
  //               'l' = ใช้มือจับด้ายซ้าย
  //               'r' = ใช้มือจับด้ายขวา
  //                    'l' = วางตำแหน่งด้านซ้าย
  //                    'c' = วางตำแหน่งตรงกลาง
  //                    'r' = วางตำแหน่งด้านขวา
  placeCan2(10, 3, 'c', 'l');      // วาง 2 กระป๋อง placeCan(ความสูง หน่วยเป็นเซ็นติเมตร, ระยะจอด, ตำแหน่งวางของมือซ้าย, ตำแหน่งวางของมือขวา)
  //               'l' = วางตำแหน่งด้านซ้าย
  //               'c' = วางตำแหน่งตรงกลาง
  //               'r' = วางตำแหน่งด้านขวา
  //                    'l' = วางตำแหน่งด้านซ้าย
  //                    'c' = วางตำแหน่งตรงกลาง
  //                    'r' = วางตำแหน่งด้านขวา
}
